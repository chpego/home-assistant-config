- id: '1688111538910'
  alias: Litière Intelligente - Incrementer passages litière
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.capteur_mouvement_litiere
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_clean_cat_litter_box
    state: 'on'
  action:
  - service: input_number.increment
    data: {}
    target:
      entity_id: input_number.litter_tracking
  mode: single
- id: '1688112377959'
  alias: "Litière Intelligente - \U0001F514 Notifier litière pleine"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_litter_full
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_clean_cat_litter_box
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_when_present
      title: "\U0001F408  Litière"
      message: Penser a nettoyer la litière !
      callback:
      - title: Litière Nettoyée
        event: reset_litter_tracking
        icon: sfsymbols:checkmark.circle.fill
      persistent: true
      tag: litter_full
      until:
      - entity_id: binary_sensor.is_litter_full
        new_state: 'off'
  mode: single
- id: '1688112671844'
  alias: "Litière Intelligente - \U0001F4F2 Remettre à zero passages litière depuis
    notification"
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: reset_litter_tracking
  condition: []
  action:
  - service: input_number.set_value
    data:
      value: 0
    target:
      entity_id: input_number.litter_tracking
  mode: single
- id: '1688114260897'
  alias: Poubelles Intelligentes - Informer poubelle noire à sortir
  description: ''
  trigger:
  - platform: state
    entity_id:
    - schedule.planning_poubelle_noire
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_take_out_trash
    state: 'on'
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.poubelle_noire_a_sortir
  mode: single
- id: '1688114327500'
  alias: Poubelles Intelligentes - Informer poubelle verte à sortir
  description: ''
  trigger:
  - platform: state
    entity_id:
    - schedule.planning_poubelle_verte
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_take_out_trash
    state: 'on'
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.poubelle_verte_a_sortir
  mode: single
- id: '1688114732811'
  alias: "Poubelles Intelligentes - \U0001F514 Notifier poubelle noir non sortie"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - schedule.planning_poubelle_noire
    to: 'off'
    from: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_take_out_trash
    state: 'on'
  - condition: state
    entity_id: input_boolean.poubelle_noire_a_sortir
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_present
      title: "\U0001F5D1 Poubelle Noire"
      message: N'oublie pas de sortir la poubelle noire
      tag: black_trash
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.poubelle_noire_a_sortir
  mode: single
- id: '1688114808231'
  alias: "Poubelles Intelligentes - \U0001F514 Notifier poubelle verte non sortie"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - schedule.planning_poubelle_verte
    to: 'off'
    from: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_take_out_trash
    state: 'on'
  - condition: state
    entity_id: input_boolean.poubelle_verte_a_sortir
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_present
      title: ♻️ Poubelle Verte
      message: N'oublie pas de sortir la poubelle verte
      tag: green_trash
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.poubelle_verte_a_sortir
  mode: single
- id: '1688116237944'
  alias: "Boîte aux Lettres Intelligente - \U0001F514 Notifier courrier "
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.capteur_mouvement_boite_aux_lettres
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_mailbox
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_front_door_recently_open
    state: 'off'
  action:
  - event: NOTIFIER
    event_data:
      action: send_when_present
      title: "\U0001F4EC  Boite aux lettres"
      message: Vous avez du courrier !
      tag: you_got_mail
  mode: single
- id: '1688116301973'
  alias: Boîte aux Lettres Intelligente - Supprimer notification courrier
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.capteur_mouvement_boite_aux_lettres
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_mailbox
    state: 'on'
  - condition: state
    entity_id: binary_sensor.is_front_door_recently_open
    state: 'on'
  action:
  - event: NOTIFIER_DISCARD
    event_data:
      tag: you_got_mail
  mode: single
- id: '1688117249626'
  alias: Boutons Hue - Bouton Entrée
  description: ''
  trigger:
  - platform: state
    entity_id:
    - event.entree_switch_button_1
    attribute: event_type
    to: repeat
    id: 'on'
  - platform: state
    entity_id:
    - event.entree_switch_button_4
    attribute: event_type
    to: repeat
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: script.welcome_home
        data: {}
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: script.leave_home
        data:
          call_from_main_door: true
      - wait_for_trigger:
        - platform: state
          entity_id:
          - event.entree_switch_button_4
          attribute: event_type
          to: repeat
          id: 'off'
        timeout:
          hours: 0
          minutes: 0
          seconds: 20
          milliseconds: 0
        continue_on_timeout: false
      - service: vacuum.start
        metadata: {}
        data: {}
        target:
          entity_id: vacuum.neuneu
  mode: parallel
  max: 10
- id: '1688117431729'
  alias: Boutons Hue - Bouton Salon Couloir
  description: ''
  trigger:
  - platform: state
    entity_id:
    - event.salon_couloir_switch_button_1
    attribute: event_type
    to: repeat
    id: 'on'
  - platform: state
    entity_id:
    - event.salon_couloir_switch_button_4
    attribute: event_type
    to: repeat
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: script.reset_lights_day_area
        data: {}
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.lumieres_rez_de_chaussee
          - light.exterieur
  mode: single
- id: '1688118075093'
  alias: "Machine a Laver Intelligente - \U0001F514 Notifier cycle de lavage terminé"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_washing_machine_running
    to: 'off'
    from: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_washing_machine
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_when_present
      title: "\U0001FAE7 Machine à laver"
      message: Cycle de lavage terminé !
      tag: washing_mashine_over
  mode: single
- id: '1688129246113'
  alias: Irrigation intelligente - Calculer fin arrosage
  description: ''
  trigger:
  - platform: state
    entity_id:
    - valve.irrigation
    to: open
    from: closed
  condition:
  - condition: state
    entity_id: input_boolean.irrigation_automation
    state: 'on'
  action:
  - service: input_datetime.set_datetime
    data:
      datetime: '{{ now() + timedelta (minutes = states(''input_number.irrigation_time'')
        | int) }}'
    target:
      entity_id: input_datetime.end_of_irrigation
  mode: single
- id: '1688129871554'
  alias: Irrigation intelligente - Arrêter arrosage
  description: ''
  trigger:
  - platform: time
    at: input_datetime.end_of_irrigation
    id: end
  - platform: homeassistant
    event: start
    id: restart
  - platform: state
    entity_id:
    - input_boolean.irrigation_automation
  condition:
  - condition: state
    entity_id: input_boolean.irrigation_automation
    state: 'on'
  - condition: state
    entity_id: valve.irrigation
    state: open
  - condition: template
    value_template: '{{now() >= as_local(as_datetime(states("input_datetime.end_of_irrigation")))}}'
  action:
  - service: valve.close_valve
    target:
      entity_id: valve.irrigation
    data: {}
  mode: queued
  max: 10
- id: '1688134691132'
  alias: "Tesla - \U0001F514 Notifier charge hors heures creuses"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.tesla_state
    to: charging
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.automation_tesla
    state: 'on'
  - condition: state
    entity_id: device_tracker.tesla_device_tracker
    state: home
  - condition: state
    entity_id: schedule.heures_pleines
    state: 'off'
  - condition: template
    value_template: '{{ now() + timedelta(hours = states("sensor.tesla_time_to_full_charge")
      | float) > state_attr(''schedule.heures_pleines'', ''next_event'') }}'
  action:
  - variables:
      new_target_percentage: '{{ (( states(''sensor.tesla_charge_limit'')|float -  states(''sensor.tesla_battery_level'')|float)
        * (state_attr(''schedule.heures_pleines'', ''next_event'') - now()) / timedelta(
        hours = states(''sensor.tesla_time_to_full_charge'') | float) + states(''sensor.tesla_battery_level'')|float)
        | round(0)}}'
      actual_end_date: '{{ (now() + timedelta(hours = states("sensor.tesla_time_to_full_charge")
        |float)).strftime("%H:%M") }}'
  - event: NOTIFIER
    event_data:
      action: send_to_jl
      title: "️\U0001F697 Tesla"
      message: La recharge est prevue de finir après la fin des heures creuse ({{actual_end_date}}).
        Clique ici pour réduire la cible de recharge à {{new_target_percentage}}%
      click_url: /lovelace/tesla
      tag: tesla_end_charge_after_off_peak_hours
      siri_shortcut_name: Tesla Set Charge Limit From Home Assistant
      until:
      - entity_id: sensor.tesla_charge_limit
        new_state: '{{new_target_percentage}}'
  mode: single
- id: '1688139412657'
  alias: Réveil intelligent - Régler heures de déclenchement
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_datetime.wake_up_time
  condition:
  - condition: state
    entity_id: input_boolean.automation_wake_up
    state: 'on'
  action:
  - service: input_datetime.set_datetime
    data:
      datetime: '{{today_at(states(''input_datetime.wake_up_time'')) - timedelta(minutes
        = 5)}}'
    target:
      entity_id: input_datetime.wake_up_time_lights
  mode: single
- id: '1688139621896'
  alias: Réveil intelligent - Allumer Lumières
  description: ''
  trigger:
  - platform: time
    at: input_datetime.wake_up_time_lights
  condition:
  - condition: state
    entity_id: input_boolean.automation_wake_up
    state: 'on'
  - condition: state
    entity_id: binary_sensor.home_occupied
    state: 'on'
  - condition: state
    entity_id: binary_sensor.workday_today
    state: 'on'
  action:
  - service: script.wake_up
    data: {}
  mode: single
- id: '1688301259694'
  alias: TV intelligente - Allumer / Éteindre KEF
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_tv_on
    to: 'on'
    id: 'on'
  - platform: state
    entity_id:
    - binary_sensor.is_tv_on
    to: 'off'
    id: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_watch_tv
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - 'on'
      sequence:
      - service: media_player.turn_on
        data: {}
        target:
          entity_id: media_player.kef
      - service: media_player.select_source
        data:
          source: Opt
        target:
          entity_id: media_player.kef
    - conditions:
      - condition: trigger
        id:
        - 'off'
      sequence:
      - service: media_player.turn_off
        data: {}
        target:
          entity_id: media_player.kef
  mode: single
- id: '1688303443168'
  alias: 'TV intelligente - Controller Lumières '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.media_center
    from:
    to:
    variables:
      from_state: '{{trigger.from_state.state}}'
      to_state: '{{trigger.to_state.state}}'
      from_app: "{% if 'app_name' in trigger.from_state.attributes -%}\n  {{trigger.from_state.attributes.app_name}}\n{%-
        else -%}\n  no_app\n{%- endif %}"
      to_app: "{% if 'app_name' in trigger.to_state.attributes -%}\n  {{trigger.to_state.attributes.app_name}}\n{%-
        else -%}\n  no_app\n{%- endif %}"
      supported_apps: '{{["Netflix", "Plex", "Prime Video"]}}'
  condition:
  - condition: state
    entity_id: input_boolean.automation_watch_tv
    state: 'on'
  - condition: state
    entity_id: sun.sun
    state: below_horizon
    enabled: true
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{\n  from_state in [\"off\", \"paused\", \"idle\", \"on\",
          \"buffering\"] and \n  to_state == \"playing\" and \n  to_app in supported_apps\n}}"
      sequence:
      - service: script.lights_set_tv
        data: {}
    - conditions:
      - condition: template
        value_template: "{{\n  from_state == \"playing\" and \n  to_state in [\"paused\",
          \"buffering\"] and \n  to_app in supported_apps\n}}"
      sequence:
      - service: script.lights_set_tv_paused
        data: {}
    - conditions:
      - condition: template
        value_template: "{{\n  from_state in [\"playing\", \"paused\", \"buffering\"]
          and \n  to_state in [\"off\", \"on\", \"idle\"] and \n  from_app in supported_apps\n}}"
      sequence:
      - service: script.reset_lights_day_area
        data: {}
  mode: queued
  max: 10
- id: '1688305917710'
  alias: TV intelligente - Controller Lumières (PS5)
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_ps5_used
    from: 'off'
    to: 'on'
    id: 'on'
  - platform: state
    entity_id:
    - binary_sensor.is_ps5_used
    from: 'on'
    to: 'off'
    id: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_watch_tv
    state: 'on'
  - condition: state
    entity_id: sun.sun
    state: below_horizon
    enabled: true
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: script.lights_set_tv
        data: {}
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: script.reset_lights_day_area
        data: {}
  mode: single
- id: '1688329966467'
  alias: Volet - Edge Cases
  description: ''
  trigger:
  - platform: event
    event_type: call_service
    event_data:
      domain: cover
      service: open_cover
      service_data:
        entity_id: cover.living_room_cover
    id: open
  - platform: event
    event_type: call_service
    event_data:
      domain: cover
      service: close_cover
      service_data:
        entity_id: cover.living_room_cover
    id: closed
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: trigger
        id: open
      - condition: state
        entity_id: cover.living_room_cover
        attribute: current_position
        state: 100
    - condition: and
      conditions:
      - condition: trigger
        id: closed
      - condition: state
        entity_id: cover.living_room_cover
        attribute: current_position
        state: 0
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: open
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.living_room_cover_volet_salon_bouton_up_fallback
    - conditions:
      - condition: trigger
        id: closed
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.living_room_cover_volet_salon_bouton_down_fallback
  mode: single
- id: '1688333037837'
  alias: Chauffage intelligent - Choisir Planning
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.home_occupied
    to:
    from:
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - input_boolean.automation_heat_home
  - platform: state
    entity_id:
    - binary_sensor.is_home_open_since_more_than_one_minute
  condition:
  - condition: state
    entity_id: input_boolean.automation_heat_home
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.is_home_open_since_more_than_one_minute
        state: 'on'
      sequence:
      - service: input_select.select_option
        data:
          option: Frost Guard
        target:
          entity_id: input_select.heating_schedule_selector
    - conditions:
      - condition: state
        entity_id: binary_sensor.home_occupied
        state: 'off'
      sequence:
      - service: input_select.select_option
        data:
          option: Absent
        target:
          entity_id: input_select.heating_schedule_selector
    - conditions:
      - condition: state
        entity_id: binary_sensor.home_occupied
        state: 'on'
      sequence:
      - service: input_select.select_option
        data:
          option: Présent
        target:
          entity_id: input_select.heating_schedule_selector
  mode: queued
  max: 10
- id: '1688333375509'
  alias: Chauffage intelligent - Changer Température
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.heating_target_temperature
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - climate.netatmo
    attribute: temperature
    id: temperature_changed
  - platform: state
    entity_id:
    - input_boolean.heating_manual_boost
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: time
    at: input_datetime.heating_manual_boost_end
  - platform: state
    entity_id:
    - input_boolean.automation_heat_home
  condition:
  - condition: state
    entity_id: input_boolean.automation_heat_home
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{now() >= as_local(as_datetime(states("input_datetime.heating_manual_boost_end")))}}'
      - condition: state
        entity_id: input_boolean.heating_manual_boost
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.heating_manual_boost
    - conditions:
      - condition: trigger
        id:
        - temperature_changed
      - alias: When manually triggered by a user
        condition: template
        value_template: '{{ trigger.to_state.context.user_id != None }}'
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.heating_manual_boost
    - conditions:
      - condition: template
        value_template: '{{states("sensor.heating_target_temperature") | float !=
          state_attr("climate.netatmo","temperature")}}'
        alias: When it's not coherent with the current schedule
      - condition: state
        entity_id: input_boolean.heating_manual_boost
        state: 'off'
      sequence:
      - service: climate.set_temperature
        target:
          entity_id: climate.netatmo
        data:
          temperature: '{{states("sensor.heating_target_temperature")}}

            '
  mode: queued
  max: 10
- id: '1688364991944'
  alias: Bureau - Meetings VR
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.quest_in_use
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_meetings
    state: 'on'
  - condition: state
    entity_id: person.jenova70
    state: home
  - condition: state
    state: 'on'
    entity_id: binary_sensor.capteur_presence_bureau_occupancy
  action:
  - service: scene.create
    data:
      scene_id: office_previous_light_state
      snapshot_entities:
      - light.bureau
  - service: light.turn_on
    data:
      brightness_pct: 100
      kelvin: 3521
    target:
      entity_id:
      - light.bureau
      - light.hue_play_bars
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.hal_use_wake_word
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.quest_in_use
      to: 'off'
      from: 'on'
    continue_on_timeout: false
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.hue_play_bars
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.office_previous_light_state
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.hal_use_wake_word
  mode: queued
  max: 10
- id: '1688368387161'
  alias: Bureau - Meetings
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.jean_loics_macbook_pro_camera_in_use
    to: 'on'
    from: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition:
  - condition: state
    entity_id: input_boolean.automation_meetings
    state: 'on'
  - condition: state
    entity_id: person.jenova70
    state: home
  - condition: state
    state: 'on'
    entity_id: binary_sensor.capteur_presence_bureau_occupancy
  - condition: state
    entity_id: device_tracker.jean_loics_macbook_pro
    state: home
  action:
  - service: scene.create
    data:
      scene_id: office_previous_light_state
      snapshot_entities:
      - light.bureau
  - service: light.turn_on
    data:
      brightness_pct: 100
      kelvin: 3521
    target:
      entity_id:
      - light.bureau
  - service: light.turn_on
    data:
      brightness_pct: 60
      kelvin: 3521
    target:
      entity_id:
      - light.hue_play_bars
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.hal_use_wake_word
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.jean_loics_macbook_pro_camera_in_use
      to: 'off'
      from: 'on'
    continue_on_timeout: false
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.hue_play_bars
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.office_previous_light_state
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.hal_use_wake_word
  mode: single
- id: '1688371620889'
  alias: Surveillance de la maison - Éteindre appareils lors du départ
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.home_occupied
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_home
    state: 'on'
  - condition: state
    entity_id: input_boolean.guest_mode
    state: 'off'
  action:
  - service: script.leave_home
    data:
      call_from_main_door: false
  mode: queued
  max: 10
- id: '1688373819985'
  alias: Surveillance de la maison - Allumer appareils lors de l'arrivée
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.home_occupied
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_home
    state: 'on'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id:
      - switch.microphones
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.capteur_ouverture_porte_entree
      to: 'on'
    timeout:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: cover.living_room_cover
        attribute: current_position
        state: '100'
    then:
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.living_room_cover
  - if:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
    then:
    - service: script.turn_on
      data: {}
      target:
        entity_id: script.welcome_home
  mode: queued
  max: 10
- id: '1688375110167'
  alias: "Surveillance de la maison - \U0001F514 Notifier pluie et portes/fenêtres
    ouvertes "
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_raining_now
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_home
    state: 'on'
  - condition: state
    entity_id: binary_sensor.home_occupied
    state: 'on'
  - condition: state
    entity_id: binary_sensor.all_openings
    state: 'on'
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.all_doors
      state: 'on'
    then:
    - variables:
        open_doors: "{{ \n  expand(states.binary_sensor.all_doors.attributes.entity_id)\n
          \   | selectattr('state', 'eq', 'on')\n    | map(attribute='attributes.friendly_name')
          \n    | list\n    | join(\", \")\n}}"
    - event: NOTIFIER
      event_data:
        action: send_to_present
        title: "️\U0001F302 Il pleut!"
        message: 'Les portes suivantes sont ouvertes et il commence a pleuvoir: {{open_doors}}'
        click_url: /lovelace/openings
        tag: raining_door_open
        until:
        - entity_id: binary_sensor.is_raining_now
          new_state: 'off'
        - entity_id: binary_sensor.all_doors
          new_state: 'off'
  - if:
    - condition: state
      entity_id: binary_sensor.all_windows
      state: 'on'
    then:
    - variables:
        open_windows: "{{ \n  expand(states.binary_sensor.all_windows.attributes.entity_id)\n
          \   | selectattr('state', 'eq', 'on')\n    | map(attribute='attributes.friendly_name')
          \n    | list\n    | join(\", \")\n}}"
    - event: NOTIFIER
      event_data:
        action: send_to_present
        title: "️\U0001F302 Il pleut!"
        message: 'Les fenêtres suivantes sont ouvertes et il commence a pleuvoir:
          {{open_windows}}'
        click_url: /lovelace/openings
        tag: raining_window_open
        until:
        - entity_id: binary_sensor.is_raining_now
          new_state: 'off'
        - entity_id: binary_sensor.all_windows
          new_state: 'off'
  mode: single
- id: '1688386134462'
  alias: "Surveillance du système - \U0001F514 Notifier mise a jour dispo"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.pending_updates
    attribute: entities
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_system
    state: 'on'
  - condition: template
    value_template: '{{trigger.to_state.state | int(0) > 0}}'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_jl
      title: "\U0001F389 Mise a jour disponible"
      message: '{{trigger.to_state.attributes.entities | join('', '')}}'
      click_url: /config/dashboard
      tag: update-available
      until:
      - entity_id: sensor.pending_updates
        new_state: '0'
  mode: queued
  max: 10
- id: '1688386909438'
  alias: "Surveillance du système - \U0001F514 Notifier mise a jour tesla dispo"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.tesla_update_available
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_system
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_jl
      title: "\U0001F389 Mise a jour disponible"
      message: Tesla
      click_url: /config/dashboard
      tag: tesla_update
      until:
      - entity_id: binary_sensor.tesla_update_available
        new_state: 'off'
  mode: single
- id: '1688387237599'
  alias: Surveillance du système - Backup
  description: ''
  trigger:
  - platform: time
    at: 01:00:00
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_system
    state: 'on'
  action:
  - service: hassio.backup_full
    data:
      compressed: true
      name: Home Assistant Backup {{now()}}
  mode: single
- id: '1688390987276'
  alias: "Surveillance du système - \U0001F514 Notifier batteries faibles"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.low_batteries
    to:
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.automation_monitor_system
    state: 'on'
  - condition: template
    value_template: '{{trigger.to_state.state | float(0) > 0}}'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_jl
      title: "\U0001FAAB Batteries faibles !"
      message: '{{trigger.to_state.attributes.entities | join('', '')}}'
      click_url: /config/dashboard
      tag: low-battery
      until:
      - entity_id: sensor.low_batteries
        new_state: '0'
  mode: single
- id: '1688537182551'
  alias: "Servarr - \U0001F514 Notification "
  description: ''
  trigger:
  - platform: webhook
    allowed_methods:
    - POST
    local_only: true
    webhook_id: sonarr-grab--KqTQ4vReuFd_as1xTR_hPqk2
    id: sonarr-grab
    variables:
      title: "\U0001F4FA Épisode en télechargement ..."
      message: '{{trigger.json.series.title}} - {{trigger.json.episodes[0].seasonNumber}}x{{trigger.json.episodes[0].episodeNumber}}
        - {{trigger.json.episodes[0].title}}'
      tag: '{{trigger.json.downloadId}}'
  - platform: webhook
    allowed_methods:
    - POST
    local_only: true
    webhook_id: sonarr-download--KqTQ4vReuFd_as1xTR_hPqk2
    id: sonarr-download
    variables:
      title: "\U0001F4FA Épisode téléchargé !"
      message: '{{trigger.json.series.title}} - {{trigger.json.episodes[0].seasonNumber}}x{{trigger.json.episodes[0].episodeNumber}}
        - {{trigger.json.episodes[0].title}}'
      tag: '{{trigger.json.downloadId}}'
  - platform: webhook
    allowed_methods:
    - POST
    local_only: true
    webhook_id: radarr-grab-ugUFeiF1HF_WK_-jpm1aFMCQ
    id: radarr-grab
    variables:
      title: "\U0001F3A5 Film en télechargement ..."
      message: '{{trigger.json.movie.title}} ({{trigger.json.movie.year}})'
      tag: '{{trigger.json.downloadId}}'
  - platform: webhook
    allowed_methods:
    - POST
    local_only: true
    webhook_id: radarr-download-grab-ugUFeiF1HF_WK_-jpm1aFMCQ
    id: radarr-download
    variables:
      title: "\U0001F3A5 Film téléchargé !"
      message: '{{trigger.json.movie.title}} ({{trigger.json.movie.year}})'
      tag: '{{trigger.json.downloadId}}'
  condition: []
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_jl
      title: '{{title}}'
      message: '{{message}}'
      icon: mdi:television-shimmer
      tag: '{{tag}}'
  mode: single
- id: '1688556025376'
  alias: "Nettoyage Intelligent - \U0001F514 Notifier rez-de-chaussée très sale"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.should_neuneu_run_urgently
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_clean_house
    state: 'on'
  - condition: state
    entity_id: input_boolean.house_cleaning_first_floor
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_nearest
      title: "\U0001F9F9 Rez-de-chaussé sale"
      message: NeuNeu n'a pas tourné depuis longtemps! Ne pas oublier de le lancer!
      callback:
      - title: Lancer NeuNeu
        event: start_neuneu
        icon: play.circle.fill
      click_url: /lovelace/vacuums
      tag: first_floor_very_dirty
      until:
      - entity_id: vacuum.neuneu
        new_state: cleaning
  mode: single
- id: '1688556280183'
  alias: "Nettoyage Intelligent - \U0001F514 Notifier Nettoyage NeuNeu"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.neuneu
    to: cleaning
  condition:
  - condition: state
    entity_id: input_boolean.automation_notify_cleaning
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_nearest
      title: "\U0001F9F9 Nettoyage"
      message: NeuNeu démarre son nettoyage
      callback:
      - title: Arrêter  NeuNeu
        event: rth_neuneu
        icon: stop.circle.fill
        destructive: true
      click_url: /lovelace/vacuums
      tag: neuneu
  mode: single
- id: '1688556647795'
  alias: Nettoyage Intelligent - Considérer rez-de-chaussée propre
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.neuneu
    to: cleaning
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - service: input_datetime.set_datetime
    data:
      datetime: '{{now()}}'
    target:
      entity_id: input_datetime.dernier_nettoyage_de_neuneu
  mode: single
- id: '1688557191445'
  alias: "Nettoyage Intelligent - \U0001F514 Notifier NeuNeu terminé"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.neuneu
    to: returning
    from:
    - paused
    - cleaning
  condition:
  - condition: state
    entity_id: input_boolean.automation_notify_cleaning
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_nearest
      title: ✅ NeuNeu a terminé
      message: 'Surface nettoyée: {{states(''sensor.neuneu_cleaned_area'')}}m²'
      click_url: /lovelace/vacuums
      tag: neuneu
      image_url: /api/camera_proxy/camera.neuneu_map
  mode: single
- id: '1688557628209'
  alias: "Nettoyage Intelligent - \U0001F4F2 Démarrer NeuNeu depuis notification"
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: start_neuneu
  condition: []
  action:
  - service: vacuum.start
    data: {}
    target:
      entity_id: vacuum.neuneu
  mode: single
- id: '1688557670153'
  alias: "Nettoyage Intelligent - \U0001F4F2 RTH NeuNeu depuis notification"
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: rth_neuneu
  condition: []
  action:
  - service: vacuum.return_to_base
    data: {}
    target:
      entity_id: vacuum.neuneu
  mode: single
- id: '1688927204517'
  alias: "Tesla - \U0001F514 Notifier réinitialisation de cible de charge "
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.tesla_plugged_in
    from: 'on'
    to: 'off'
  - platform: state
    entity_id:
    - sensor.tesla_state
    from: charging
  condition:
  - condition: state
    entity_id: input_boolean.automation_tesla
    state: 'on'
  - condition: state
    entity_id: device_tracker.tesla_device_tracker
    state: home
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.tesla_charge_limit
      state: '100'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_jl
      title: "️\U0001F697 Tesla"
      message: Clique ici pour réinitialiser la cible de recharge (actuellement à
        {{states("sensor.tesla_charge_limit")}}%)
      click_url: /lovelace/tesla
      tag: tesla_reset_charge_limit
      siri_shortcut_name: Tesla Reset Charge Limit From Home Assistant
      until:
      - entity_id: sensor.tesla_charge_limit
        new_state: '100'
  mode: single
- id: '1689253436663'
  alias: Lumières Extérieures - Synchroniser Hue et SONOFF
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.is_exterior_sphere_bright
    from: 'off'
    to: 'on'
    id: sphere_bright
    for:
      hours: 0
      minutes: 0
      seconds: 1
  - platform: state
    entity_id:
    - binary_sensor.is_exterior_sphere_bright
    from: 'on'
    to: 'off'
    id: sphere_not_bright
    for:
      hours: 0
      minutes: 0
      seconds: 1
  - platform: state
    entity_id:
    - light.plafonnier_exterieur
    from: 'off'
    to: 'on'
    id: ceiling_light_on
    for:
      hours: 0
      minutes: 0
      seconds: 1
  - platform: state
    entity_id:
    - light.plafonnier_exterieur
    from: 'on'
    to: 'off'
    id: ceiling_light_off
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - sphere_bright
      - condition: state
        entity_id: light.plafonnier_exterieur
        state: 'off'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.plafonnier_exterieur
    - conditions:
      - condition: trigger
        id:
        - sphere_not_bright
      - condition: state
        entity_id: light.plafonnier_exterieur
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.plafonnier_exterieur
    - conditions:
      - condition: trigger
        id:
        - ceiling_light_on
      - condition: state
        entity_id: binary_sensor.is_exterior_sphere_bright
        state: 'off'
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id: light.exterieur
    - conditions:
      - condition: trigger
        id:
        - ceiling_light_off
      - condition: state
        entity_id: binary_sensor.is_exterior_sphere_bright
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.exterieur
  mode: parallel
  max: 10
- id: '1689530050696'
  alias: Pulse - Arrêter
  description: ''
  trigger:
  - platform: time
    at: input_datetime.pulse_end_time
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.2d_matrix
  mode: single
- id: '1690362715725'
  alias: Pluie - Incrémenter Pluie Journalière
  description: ''
  trigger:
  - platform: time_pattern
    minutes: '*'
    hours: '*'
    seconds: '1'
  condition:
  - condition: state
    entity_id: binary_sensor.is_raining_now
    state: 'on'
  action:
  - service: input_number.increment
    data: {}
    target:
      entity_id: input_number.daily_rain
  mode: single
- id: '1690362812143'
  alias: Pluie - Réinitialiser Pluie Journalière
  description: ''
  trigger:
  - platform: time_pattern
    hours: '0'
    minutes: '0'
    seconds: '0'
  condition: []
  action:
  - service: input_number.set_value
    data:
      value: 0
    target:
      entity_id: input_number.daily_rain
  mode: single
- id: '1690826979664'
  alias: "Assist - \U0001F4E3 Commandes Multiple "
  description: ''
  trigger:
  - platform: conversation
    command:
    - '{command1} et {command2}'
  condition: []
  action:
  - service: conversation.process
    data:
      agent_id: homeassistant
      text: '{{trigger.slots.command1}}'
    response_variable: response_1
  - service: conversation.process
    data:
      agent_id: homeassistant
      text: '{{trigger.slots.command2}}'
    response_variable: response_2
  - set_conversation_response: '{{response_1.response.speech.plain.speech}} et {{response_2.response.speech.plain.speech}}'
  mode: parallel
  max: 100
- id: '1691413517615'
  alias: Bureau - Notification Lumineuse Meetings
  description: ''
  trigger:
  - platform: calendar
    event: start
    offset: -0:5:0
    entity_id: calendar.nabucasa_calendar_personal
    id: personal
  - platform: calendar
    event: start
    offset: -0:5:0
    entity_id: calendar.nabucasa_calendar_social_time
    id: social_time
  - platform: calendar
    event: start
    offset: -0:1:0
    entity_id: calendar.nabucasa_calendar_personal
    id: personal
  - platform: calendar
    event: start
    offset: -0:1:0
    entity_id: calendar.nabucasa_calendar_social_time
    id: social_time
  condition:
  - condition: state
    entity_id: input_boolean.automation_meetings
    state: 'on'
  - condition: state
    entity_id: binary_sensor.jean_loics_macbook_pro_active
    state: 'on'
  - condition: state
    entity_id: person.jenova70
    state: home
  - condition: state
    entity_id: binary_sensor.capteur_presence_bureau_occupancy
    state: 'on'
  action:
  - service: scene.create
    data:
      scene_id: office_webcam_previous_light_state
      snapshot_entities:
      - light.hue_play_bars
  - choose:
    - conditions:
      - condition: trigger
        id:
        - personal
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 100
          rgb_color:
          - 0
          - 76
          - 255
          transition: 1
        target:
          entity_id:
          - light.hue_play_bars
    - conditions:
      - condition: trigger
        id:
        - social_time
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 100
          rgb_color:
          - 68
          - 255
          - 0
          transition: 1
        target:
          entity_id:
          - light.hue_play_bars
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.office_webcam_previous_light_state
  mode: single
- id: '1691566363432'
  alias: "Simulation de présence - \U0001F6CE️ Notifier Éloignement domicile sans
    simulation de présence"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.far_away
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_presence_simulator
    state: 'off'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_nearest
      title: "\U0001F30D Vous etes loin"
      message: Vous vous trouvez loin du domicile activer la simulation de présence?
      callback:
      - title: Simuler une présence
        event: start_presence_simulation
        icon: gamecontroller.fill
      click_url: /dashboard-automatisations/automatisations
      tag: far_away
      until:
      - entity_id: binary_sensor.far_away
        new_state: 'on'
  mode: single
- id: '1691566452704'
  alias: "Simulation de Présence - \U0001F4F2 Activer Simulation de Présence"
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: start_presence_simulation
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.automation_presence_simulator
  mode: single
- id: '1691758172267'
  alias: "Pont Chaban Delmas - \U0001F6CE️ Notifier fermeture demain"
  description: ''
  trigger:
  - platform: time
    at: '20:00:00'
  condition:
  - condition: state
    entity_id: input_boolean.automation_notify_chaban_delmas_bridge
    state: 'on'
  - condition: template
    value_template: '{{as_datetime(states("sensor.chaban_delmas_next_closing_start_date"))
      - now() > timedelta(hours = 4)}}'
  - condition: template
    value_template: '{{as_datetime(states("sensor.chaban_delmas_next_closing_start_date"))
      - now() < timedelta(days = 1, hours = 4)}}'
  action:
  - variables:
      human_redeable_closing_time: '{{as_timestamp(states("sensor.chaban_delmas_next_closing_start_date"))
        | timestamp_custom(''%H:%M'')}}

        '
  - if:
    - condition: numeric_state
      entity_id: sensor.distance_jl_home
      below: 20000
    then:
    - event: NOTIFIER
      event_data:
        action: send_to_jl
        title: "\U0001F309 Pont Chaban Delmas"
        message: Le pont Chaban Delmas fermera demain à {{human_redeable_closing_time}}
        tag: chaban_delmas_closing_tomorrow
  mode: single
- id: '1692118004694'
  alias: Simulation de présence - Arrêter lors du retour
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.home_occupied
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_presence_simulator
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.automation_presence_simulator
  mode: single
- id: '1693389795766'
  alias: "Nettoyage Intelligent - \U0001F514 Notifier NeuNeu Erreur"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.neuneu_error
    not_to:
    - unavailable
    - unknown
    - no_error
  condition:
  - condition: state
    entity_id: input_boolean.automation_notify_cleaning
    state: 'on'
  action:
  - event: NOTIFIER
    event_data:
      action: send_when_present
      title: "\U0001F9F9 NeuNeu"
      message: '{{state_translated("sensor.neuneu_error")}}

        '
      click_url: /lovelace/vacuums
      tag: neuneu_error
      until:
      - entity_id: sensor.neuneu_error
        new_state: no_error
  mode: single
- id: '1693509234441'
  alias: "Tesla - \U0001F514 Rappel charge "
  description: ''
  trigger:
  - platform: state
    entity_id:
    - schedule.heures_pleines
    from: 'on'
    to: 'off'
  - platform: state
    entity_id:
    - sensor.tesla_shift_state
    from: D
    to: P
  condition:
  - condition: state
    entity_id: input_boolean.automation_tesla
    state: 'on'
  - condition: state
    entity_id: device_tracker.tesla_device_tracker
    state: home
  - condition: state
    entity_id: binary_sensor.tesla_plugged_in
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.tesla_battery_level
    below: 65
  - condition: state
    entity_id: person.jenova70
    state: home
  - condition: state
    entity_id: schedule.heures_pleines
    state: 'off'
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_jl
      title: "️\U0001F697 Tesla"
      message: 'Pense à charger la voiture. Niveau de charge actuelle {{states(''sensor.tesla_battery_level'')}}%

        '
      click_url: /lovelace/tesla
      tag: tesla_charge_reminder
      until:
      - entity_id: binary_sensor.tesla_plugged_in
        new_state: 'on'
  mode: single
- id: '1695458967964'
  alias: Tesla - Attacher Tesla à JL en début de conduite
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.jl_connected_to_tesla
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_tesla
    state: 'on'
  action:
  - service: person.add_device_tracker
    data:
      entity_id: person.jenova70
      device_tracker:
      - device_tracker.tesla_device_tracker
  - service: person.remove_device_tracker
    data:
      entity_id: person.jenova70
      device_tracker:
      - device_tracker.jean_loics_iphone
  mode: single
- id: '1695459020679'
  alias: Tesla - Détacher Tesla à JL en fin de conduite
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.jl_connected_to_tesla
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.automation_tesla
    state: 'on'
  action:
  - service: notify.mobile_app_jean_loics_iphone
    data:
      message: request_location_update
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: person.add_device_tracker
    data:
      entity_id: person.jenova70
      device_tracker:
      - device_tracker.jean_loics_iphone
  - service: person.remove_device_tracker
    data:
      entity_id: person.jenova70
      device_tracker:
      - device_tracker.tesla_device_tracker
  mode: single
- id: '1698182832051'
  alias: TV intelligente - Activer / Désactiver Micros
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.media_center
    to: playing
    id: playing
  - platform: state
    entity_id:
    - media_player.media_center
    from: playing
    id: not_playing
  - platform: state
    entity_id:
    - binary_sensor.is_ps5_used
    from: 'off'
    to: 'on'
    id: on_ps5
  - platform: state
    entity_id:
    - binary_sensor.is_ps5_used
    from: 'on'
    to: 'off'
    id: off_ps5
  condition:
  - condition: state
    entity_id: input_boolean.automation_watch_tv
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - playing
        - on_ps5
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.wyoming_satellite_salon_microphone
    - conditions:
      - condition: trigger
        id:
        - not_playing
        - off_ps5
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.wyoming_satellite_salon_microphone
  mode: queued
  max: 50
- id: '1699131143084'
  alias: 'Music Assistant - Éteindre MASS lorsque KEF éteint '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.kef
    to: 'off'
    from: 'on'
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.music_assistant_salon_kef
      state: 'off'
  action:
  - service: media_player.turn_off
    data: {}
    target:
      entity_id: media_player.music_assistant_salon_kef
  mode: single
- id: '1699131464359'
  alias: TV intelligente - Changer Source quand Lecture en cours sur TV
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.media_center
    to: playing
  condition:
  - condition: state
    entity_id: input_boolean.automation_watch_tv
    state: 'on'
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.kef
      attribute: source
      state: Opt
  action:
  - service: media_player.select_source
    data:
      source: Opt
    target:
      entity_id: media_player.kef
  mode: single
- id: '1699868538036'
  alias: Routine du sommeil Marilou - Arrêter
  description: ''
  trigger:
  - platform: homeassistant
    event: start
    id: restart
  - platform: time
    at: input_datetime.marilou_bedtime_routine_end
    id: end
  condition:
  - condition: state
    entity_id: media_player.music_assistant_chambre_marilou_muse_luxe
    state: playing
  - condition: template
    value_template: '{{now() >= as_local(as_datetime(states("input_datetime.marilou_bedtime_routine_end")))}}'
  action:
  - service: media_player.media_pause
    metadata: {}
    data: {}
    target:
      entity_id: media_player.music_assistant_chambre_marilou_muse_luxe
  - service: media_player.turn_off
    data: {}
    target:
      entity_id: media_player.music_assistant_chambre_marilou_muse_luxe
  - service: light.turn_off
    data: {}
    target:
      area_id: chambre_bebe
  mode: single
- id: '1699869463559'
  alias: Routine du sommeil Marilou - Button Hue
  description: ''
  trigger:
  - platform: state
    entity_id:
    - event.chambre_bebe_switch_button_4
    attribute: event_type
    to: repeat
  condition: []
  action:
  - service: light.turn_off
    data: {}
    target:
      area_id: chambre_bebe
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.music_assistant_chambre_marilou_muse_luxe
        state: playing
      sequence:
      - service: media_player.turn_off
        data: {}
        target:
          entity_id: media_player.music_assistant_chambre_marilou_muse_luxe
      - service: input_datetime.set_datetime
        data:
          datetime: '{{ now() }}'
        target:
          entity_id: input_datetime.marilou_bedtime_routine_end
    default:
    - service: script.start_marilou_bedtime_routine
      data: {}
  mode: single
- id: '1700129731183'
  alias: Chauffage intelligent - Changer Fin du Boost Manuel
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_number.heating_manual_boost_duration
  - platform: state
    entity_id:
    - input_boolean.heating_manual_boost
  - platform: state
    entity_id:
    - input_boolean.automation_heat_home
  condition:
  - condition: state
    entity_id: input_boolean.automation_heat_home
    state: 'on'
  - condition: state
    entity_id: input_boolean.heating_manual_boost
    state: 'on'
  action:
  - service: input_datetime.set_datetime
    data:
      datetime: '{{ now() + timedelta (minutes = states(''input_number.heating_manual_boost_duration'')
        |

        int) }}

        '
    target:
      entity_id: input_datetime.heating_manual_boost_end
  mode: queued
  max: 10
- id: '1700265595004'
  alias: Nettoyage Intelligent - Contrôler NeuNeu
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.automation_clean_house
  - platform: state
    entity_id:
    - input_boolean.house_cleaning_first_floor
  - platform: state
    entity_id:
    - vacuum.neuneu
    from:
    to:
    id: vacuum_state_change
  - platform: state
    entity_id:
    - binary_sensor.home_occupied
    from:
    to:
  - platform: state
    entity_id:
    - binary_sensor.should_neuneu_run
  - platform: state
    entity_id:
    - input_boolean.guest_mode
  - platform: state
    entity_id:
    - sensor.neuneu_water_tank
    to: installed
    for:
      hours: 0
      minutes: 10
      seconds: 0
    from: not_installed
    id: water_tank_installed_for_more_than_10_minutes
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: input_boolean.automation_clean_house
    state: 'on'
  action:
  - if:
    - condition: trigger
      id:
      - vacuum_state_change
    - condition: state
      entity_id: vacuum.neuneu
      state: cleaning
    - condition: state
      entity_id: binary_sensor.home_occupied
      state: 'on'
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.neuneu_triggered_while_home_occupied
  - choose:
    - conditions:
      - condition: trigger
        id:
        - water_tank_installed_for_more_than_10_minutes
      sequence:
      - service: vacuum.start
        data: {}
        target:
          entity_id: vacuum.neuneu
    - conditions:
      - condition: state
        entity_id: binary_sensor.home_occupied
        state: 'on'
      - condition: state
        entity_id: vacuum.neuneu
        state: cleaning
      - condition: state
        entity_id: input_boolean.neuneu_triggered_while_home_occupied
        state: 'off'
      sequence:
      - service: vacuum.return_to_base
        data: {}
        target:
          entity_id: vacuum.neuneu
    - conditions:
      - condition: state
        entity_id: binary_sensor.home_occupied
        state: 'off'
      - condition: state
        entity_id: binary_sensor.should_neuneu_run
        state: 'on'
      - condition: state
        entity_id: vacuum.neuneu
        state: docked
      - condition: state
        entity_id: input_boolean.house_cleaning_first_floor
        state: 'on'
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
      sequence:
      - service: vacuum.start
        data: {}
        target:
          entity_id: vacuum.neuneu
  - if:
    - condition: state
      entity_id: vacuum.neuneu
      state: docked
    - condition: not
      conditions:
      - condition: state
        entity_id: select.neuneu_selected_map
        state: 'Rez-de-chaussée '
    then:
    - service: select.select_option
      data:
        option: Rez-De-Chaussée
      target:
        entity_id: select.neuneu_selected_map
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.home_occupied
        state: 'off'
      - condition: state
        entity_id: vacuum.neuneu
        state: docked
    then:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.neuneu_triggered_while_home_occupied
  mode: queued
  max: 10
- id: '1700410464307'
  alias: Simulation de présence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.presence_simulator_current_step
  - platform: state
    entity_id:
    - input_boolean.automation_presence_simulator
  - platform: state
    entity_id:
    - input_boolean.presence_simulator_control_cover
  - platform: state
    entity_id:
    - binary_sensor.home_occupied
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: input_boolean.automation_presence_simulator
    state: 'on'
  - condition: state
    entity_id: binary_sensor.home_occupied
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.presence_simulator_current_step
        state: out
      sequence:
      - service: light.turn_off
        target:
          entity_id:
          - light.all_lights
        data: {}
      - if:
        - condition: state
          entity_id: input_boolean.presence_simulator_control_cover
          state: 'on'
        then:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.living_room_cover
    - conditions:
      - condition: state
        entity_id: sensor.presence_simulator_current_step
        state: wake_up
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.lumieres_rez_de_chaussee
          - light.couloir
          - light.exterieur
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id:
          - light.chambre
          - light.chambre_bebe
          - light.bureau
      - if:
        - condition: state
          entity_id: input_boolean.presence_simulator_control_cover
          state: 'on'
        then:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.living_room_cover
    - conditions:
      - condition: state
        entity_id: sensor.presence_simulator_current_step
        state: breakfast
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.chambre
          - light.chambre_bebe
          - light.bureau
          - light.couloir
          - light.exterieur
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id: light.lumieres_rez_de_chaussee
      - if:
        - condition: state
          entity_id: input_boolean.presence_simulator_control_cover
          state: 'on'
        then:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.living_room_cover
    - conditions:
      - condition: state
        entity_id: sensor.presence_simulator_current_step
        state: chill
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.chambre
          - light.chambre_bebe
          - light.bureau
          - light.couloir
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id:
          - light.lumieres_rez_de_chaussee
          - light.exterieur
      - if:
        - condition: state
          entity_id: input_boolean.presence_simulator_control_cover
          state: 'on'
        then:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.living_room_cover
    - conditions:
      - condition: state
        entity_id: sensor.presence_simulator_current_step
        state: eating
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.chambre
          - light.chambre_bebe
          - light.bureau
          - light.couloir
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id:
          - light.lumieres_rez_de_chaussee
          - light.exterieur
      - if:
        - condition: state
          entity_id: input_boolean.presence_simulator_control_cover
          state: 'on'
        then:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.living_room_cover
    - conditions:
      - condition: state
        entity_id: sensor.presence_simulator_current_step
        state: bedtime
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.lumieres_rez_de_chaussee
          - light.couloir
          - light.exterieur
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id:
          - light.chambre
          - light.chambre_bebe
          - light.bureau
      - if:
        - condition: state
          entity_id: input_boolean.presence_simulator_control_cover
          state: 'on'
        then:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.living_room_cover
  mode: single
- id: '1701249166858'
  alias: "Chauffage intelligent - \U0001F6CE️ Notifier Température anormale Salon"
  description: ''
  use_blueprint:
    path: perso/notify_abnormal_temperature.yaml
    input:
      room_name: Salon
      room_temperature: sensor.capteur_thp_salon_temperature
      room_opening: binary_sensor.is_living_room_open_since_more_than_10_minutes
      outside_temperature: sensor.floirac_temperature
- id: '1701249721944'
  alias: "Chauffage intelligent - \U0001F6CE️ Notifier Température anormale Chambre"
  description: ''
  use_blueprint:
    path: perso/notify_abnormal_temperature.yaml
    input:
      room_name: Chambre
      room_temperature: sensor.capteur_thp_chambre_temperature
      room_opening: binary_sensor.is_bedroom_open_since_more_than_10_minutes
      outside_temperature: sensor.floirac_temperature
- id: '1701249811714'
  alias: "Chauffage intelligent - \U0001F6CE️ Notifier Température anormale Chambre
    Marilou"
  description: ''
  use_blueprint:
    path: perso/notify_abnormal_temperature.yaml
    input:
      room_name: Chambre Marilou
      room_temperature: sensor.capteur_thp_chambre_bebe_temperature
      room_opening: binary_sensor.is_kid_bedroom_open_since_more_than_10_minutes
      outside_temperature: sensor.floirac_temperature
- id: '1701249857712'
  alias: "Chauffage intelligent - \U0001F6CE️ Notifier Température anormale Bureau"
  description: ''
  use_blueprint:
    path: perso/notify_abnormal_temperature.yaml
    input:
      room_name: Bureau
      room_temperature: sensor.capteur_thp_bureau_temperature
      room_opening: binary_sensor.is_office_open_since_more_than_10_minutes
      outside_temperature: sensor.floirac_temperature
- id: '1701341635863'
  alias: Restaurer États Prises
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.prise_frigo
  - platform: state
    entity_id:
    - switch.prise_lave_vaisselle
  - platform: state
    entity_id:
    - switch.prise_machine_a_laver
  - platform: state
    entity_id:
    - switch.prise_server
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.always_on_switches
  mode: queued
  max: 100
- id: '1702164245946'
  alias: Routine du sommeil Marilou - Changer heure fin de routine
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_number.marilou_bedtime_routine_duration
  - platform: state
    entity_id:
    - script.start_marilou_bedtime_routine
    to: 'on'
  condition: []
  action:
  - service: input_datetime.set_datetime
    data:
      datetime: '{{ now() + timedelta (minutes = states(''input_number.marilou_bedtime_routine_duration'')
        | int) }}'
    target:
      entity_id: input_datetime.marilou_bedtime_routine_end
  mode: single
- id: '1702834566659'
  alias: "Poubelles Intelligentes - \U0001F514 Notifier poubelles a sortir lors de
    l’arrivée à la maison"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.home_occupied
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.automation_take_out_trash
    state: 'on'
  action:
  - if:
    - condition: state
      entity_id: input_boolean.poubelle_noire_a_sortir
      state: 'on'
    then:
    - event: NOTIFIER
      event_data:
        action: send_to_present
        title: "\U0001F5D1 Poubelle Noire"
        message: N'oublie pas de sortir la poubelle noire
        tag: black_trash
        callback:
        - title: Poubelle Noire Sortie
          event: black_trash_taken_out
          icon: checkmark.circle
        until:
        - entity_id: input_boolean.poubelle_noire_a_sortir
          new_state: 'off'
  - if:
    - condition: state
      entity_id: input_boolean.poubelle_verte_a_sortir
      state: 'on'
    then:
    - event: NOTIFIER
      event_data:
        action: send_to_present
        title: ♻️ Poubelle Verte
        message: N'oublie pas de sortir la poubelle verte
        tag: green_trash
        callback:
        - title: Poubelle Verte Sortie
          event: green_trash_taken_out
          icon: checkmark.circle
        until:
        - entity_id: input_boolean.poubelle_verte_a_sortir
          new_state: 'off'
  mode: single
- id: '1702835659800'
  alias: "Poubelles Intelligentes - \U0001F4F2 Poubelle verte sortie depuis notification"
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: green_trash_taken_out
  condition: []
  action:
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.poubelle_verte_a_sortir
    data: {}
  mode: single
- id: '1702835708226'
  alias: "Poubelles Intelligentes - \U0001F4F2 Poubelle noire sortie depuis notification"
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: black_trash_taken_out
  condition: []
  action:
  - service: input_boolean.turn_off
    target:
      entity_id:
      - input_boolean.poubelle_noire_a_sortir
    data: {}
  mode: single
- id: '1703176659308'
  alias: Bureau - Standing Desk Autonome
  description: ''
  trigger:
  - platform: time_pattern
    minutes: '25'
  - platform: time_pattern
    minutes: '55'
  condition:
  - condition: state
    entity_id: input_boolean.automation_meetings
    state: 'on'
  - condition: state
    entity_id: binary_sensor.jean_loics_macbook_pro_camera_in_use
    state: 'off'
  - condition: state
    entity_id: binary_sensor.quest_in_use
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: person.jenova70
        state: home
      - condition: state
        entity_id: binary_sensor.jean_loics_macbook_pro_active
        state: 'on'
      - condition: state
        entity_id: device_tracker.jean_loics_macbook_pro
        state: home
      - condition: state
        entity_id: binary_sensor.capteur_presence_bureau_occupancy
        state: 'on'
      - condition: state
        entity_id: binary_sensor.workday_today
        state: 'on'
      - condition: time
        before: '18:00:00'
        after: 08:00:00
      - condition: numeric_state
        entity_id: sensor.next_meeting_in
        above: 2100
      - condition: template
        value_template: '{{ range(1, 4) | random == 1 }}'
      sequence:
      - repeat:
          sequence:
          - service: button.press
            target:
              entity_id:
              - button.standing_desk_move_desk_to_position_1
            data: {}
          - wait_for_trigger:
            - platform: state
              entity_id:
              - binary_sensor.standing_desk_moving
              to: 'on'
            timeout:
              hours: 0
              minutes: 0
              seconds: 3
              milliseconds: 0
          - wait_for_trigger:
            - platform: state
              entity_id:
              - binary_sensor.standing_desk_moving
              to: 'off'
            timeout:
              hours: 0
              minutes: 0
              seconds: 20
              milliseconds: 0
          - if:
            - condition: template
              value_template: '{{ repeat.index >= 5 }}'
            then:
            - stop: ''
          while:
          - condition: not
            conditions:
            - condition: state
              entity_id: sensor.standing_desk_state
              state: standing_position
    default:
    - repeat:
        sequence:
        - service: button.press
          target:
            entity_id: button.standing_desk_move_desk_to_position_2
          data: {}
        - wait_for_trigger:
          - platform: state
            entity_id:
            - binary_sensor.standing_desk_moving
            to: 'on'
          timeout:
            hours: 0
            minutes: 0
            seconds: 3
            milliseconds: 0
        - wait_for_trigger:
          - platform: state
            entity_id:
            - binary_sensor.standing_desk_moving
            to: 'off'
          timeout:
            hours: 0
            minutes: 0
            seconds: 20
            milliseconds: 0
        - if:
          - condition: template
            value_template: '{{ repeat.index >= 5 }}'
          then:
          - stop: ''
        while:
        - condition: not
          conditions:
          - condition: state
            entity_id: sensor.standing_desk_state
            state: seated_position
  mode: single
- id: '1706048671788'
  alias: Routine du sommeil Marilou - Suivant
  description: ''
  trigger:
  - platform: state
    entity_id:
    - event.chambre_bebe_switch_button_2
    attribute: event_type
    to: short_release
    id: up
  - platform: state
    entity_id:
    - event.chambre_bebe_switch_button_3
    attribute: event_type
    to: short_release
    id: down
  condition:
  - condition: state
    entity_id: media_player.music_assistant_chambre_marilou_muse_luxe
    state: playing
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - up
      sequence:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - event.chambre_bebe_switch_button_3
          attribute: event_type
          to: short_release
        timeout:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
        continue_on_timeout: false
    - conditions:
      - condition: trigger
        id:
        - down
      sequence:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - event.chambre_bebe_switch_button_2
          attribute: event_type
          to: short_release
        timeout:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
        continue_on_timeout: false
  - service: media_player.media_next_track
    metadata: {}
    data: {}
    target:
      entity_id: media_player.music_assistant_chambre_marilou_muse_luxe
  mode: queued
  max: 10
- id: '1707214155021'
  alias: "Bureau - \U0001F4E3 Contrôle du Standing Desk par la voix"
  description: ''
  trigger:
  - platform: conversation
    command:
    - (Lève|Lever|Monte|Monter) [le] bureau
    - (Mais|Mets|Mettre|Passe|Passer) [le] bureau [en] (mode|position) debout
    id: up
  - platform: conversation
    command:
    - (descend|descends|descendre|Baisse|Baisser) [le] bureau
    - (Mais|Mets|Mettre|Passe|Passer) [le] bureau [en] (mode|position) (assis|assise)
    id: down
  condition:
  - condition: state
    entity_id: binary_sensor.standing_desk_moving
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - up
      sequence:
      - service: button.press
        metadata: {}
        data: {}
        target:
          entity_id: button.standing_desk_move_desk_to_position_1
      - set_conversation_response: Bureau en montée
    - conditions:
      - condition: trigger
        id:
        - down
      sequence:
      - service: button.press
        metadata: {}
        data: {}
        target:
          entity_id:
          - button.standing_desk_move_desk_to_position_2
      - set_conversation_response: Bureau en descente
  mode: single
- id: '1707299287220'
  alias: "Aspirateur - \U0001F4E3 Démarrer par commande vocale"
  description: ''
  trigger:
  - platform: conversation
    command:
    - (nettoie|nettoyer) [le] rez-de-chaussée
    - (nettoie|nettoyer) [le] bas
  condition: []
  action:
  - service: vacuum.start
    metadata: {}
    data: {}
    target:
      entity_id: vacuum.neuneu
  - set_conversation_response: Nettoyage lancé
  mode: single
- id: '1707424061311'
  alias: "Routine du sommeil Marilou - \U0001F4E3 Lancer par commande vocale "
  description: ''
  trigger:
  - platform: conversation
    command:
    - 'Au dodo '
    - (Au lit)|(Ollie)|(Holly)
  condition: []
  action:
  - service: script.start_marilou_bedtime_routine
    metadata: {}
    data: {}
  - service: light.turn_off
    metadata: {}
    data: {}
    target:
      area_id: chambre_bebe
  - set_conversation_response: Bonne nuit
  mode: single
- id: '1707728356919'
  alias: "Meta Quest - \U0001F6CE️ Notification batterie faible."
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.quest_in_use
    to: 'off'
    from: 'on'
  condition:
  - condition: numeric_state
    entity_id: sensor.quest_battery_level
    below: 60
  action:
  - event: NOTIFIER
    event_data:
      action: send_to_jl
      title: "️\U0001F576️ Quest"
      message: "La batterie du Quest est actuellement à {{states(\"sensor.quest_battery_level\")}}%.
        Pense à le recharger. \n"
      tag: charge_quest
  mode: single
- id: '1708194950863'
  alias: Party Time Marilou
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.party_time_marilou
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.party_time_marilou
        state: 'on'
      sequence:
      - service: light.turn_on
        metadata: {}
        data:
          rgb_color:
          - 40
          - 95
          - 244
          brightness_pct: 100
        target:
          entity_id: light.chambre_bebe_leds
      - service: light.turn_on
        metadata: {}
        data:
          rgb_color:
          - 235
          - 77
          - 61
          brightness_pct: 100
        target:
          entity_id:
          - light.miffy
      - service: light.turn_on
        metadata: {}
        data:
          rgb_color:
          - 255
          - 0
          - 255
          brightness_pct: 100
        target:
          entity_id:
          - light.chambre_bebe_suspension
      - service: light.turn_on
        metadata: {}
        data:
          effect: prism
        target:
          entity_id:
          - light.chambre_bebe_suspension
          - light.chambre_bebe_leds
          - light.miffy
      - service: light.turn_on
        metadata: {}
        data:
          effect: candle
        target:
          entity_id: light.chambre_bebe_etoile
      - service: light.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: light.chambre_bebe_guirlande
      - service: light.turn_on
        metadata: {}
        data:
          brightness_pct: 100
        target:
          entity_id: light.chambre_bebe_etoile
    - conditions:
      - condition: state
        entity_id: input_boolean.party_time_marilou
        state: 'off'
      sequence:
      - service: light.turn_on
        metadata: {}
        data:
          brightness_pct: 100
          effect: none
          kelvin: 2457
        target:
          area_id: chambre_bebe
      - service: light.turn_off
        metadata: {}
        data: {}
        target:
          area_id: chambre_bebe
  mode: single
- id: '1710949489035'
  alias: "Assist - \U0001F4E3 Multiple Commands (EN)"
  description: ''
  trigger:
  - platform: conversation
    command:
    - '{command1} and {command2}'
  condition: []
  action:
  - service: conversation.process
    data:
      agent_id: homeassistant
      text: '{{trigger.slots.command1}}'
      language: en
    response_variable: response_1
  - service: conversation.process
    data:
      agent_id: homeassistant
      text: '{{trigger.slots.command2}}'
      language: en
    response_variable: response_2
  - set_conversation_response: '{{response_1.response.speech.plain.speech}} and {{response_2.response.speech.plain.speech}}'
  mode: parallel
  max: 100
- id: '1711723541187'
  alias: "Assist - \U0001F4E3 Quitter la maison"
  description: ''
  trigger:
  - platform: conversation
    command:
    - Je pars [faire un tour]
    - Je m'en vais [faire un tour]
    - On part [faire un tour]
    - On s'en va [faire un tour]
    - Au revoir
    - À bientôt
    - À plus
  condition: []
  action:
  - service: script.leave_home
    metadata: {}
    data:
      call_from_main_door: false
    enabled: true
  - set_conversation_response: '{% set time = now().hour %}

      {% if (time >= 18) %}

      Bonne soirée

      {% elif (time >= 12) %}

      Bonne après-midi

      {% elif (time >= 5) %}

      Bonne journée

      {% else %}

      Bonne nuit

      {% endif %}'
  mode: single
- id: '1712660364204'
  alias: 'Box Chambre - Gérer Luminosité '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sun.sun
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - light.chambre
  - platform: state
    entity_id:
    - light.box_chambre_lcd_backlight
    attribute: brightness
  - platform: state
    entity_id:
    - binary_sensor.box_chambre_assist_en_cours
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sun.sun
          state: above_horizon
        - condition: state
          entity_id: light.chambre
          state: 'on'
        - condition: state
          entity_id: binary_sensor.box_chambre_assist_en_cours
          state: 'on'
      sequence:
      - service: light.turn_on
        metadata: {}
        data:
          brightness_pct: 100
        target:
          entity_id: light.box_chambre_lcd_backlight
    default:
    - service: light.turn_on
      metadata: {}
      data:
        brightness_pct: 20
      target:
        entity_id: light.box_chambre_lcd_backlight
  mode: queued
  max: 10
- id: '1713855798081'
  alias: "Assist - \U0001F4E3 Éteindre temporairement un assistant vocal"
  description: ''
  trigger:
  - platform: conversation
    command:
    - Tais-toi
    - Ta gueule
    - Chut
    - Silence
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ trigger.device_id != None}}'
      enabled: true
    then:
    - service: script.turn_on
      metadata: {}
      data:
        variables:
          device: '{{trigger.device_id}}'
      target:
        entity_id: script.eteindre_temporairement_un_assistant_vocal
    - set_conversation_response: A bientôt
    else:
    - set_conversation_response: Cette commande ne fonctionne pas depuis cet appareil
  mode: single
- id: '1714134719761'
  alias: "Assist - \U0001F4E3 Réinitialiser la lumière"
  description: ''
  trigger:
  - platform: conversation
    command:
    - réinitialise[r] (la|les) lumière[s]
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ trigger.device_id != None}}'
    then:
    - variables:
        target_scene_list: "{% set default_scenes = label_entities(\"Scène par défaut\")
          %}\n{% set target_area = area_id(trigger.device_id) %}\n{% set entities_in_area
          = area_entities(target_area) %}\n\n[\n{%- for entity in entities_in_area
          -%}\n  {%- if entity in default_scenes -%}\n    \"{{entity}}\",\n  {%- endif
          -%}\n{%- endfor -%}\n]\n"
    - if:
      - condition: template
        value_template: '{{ target_scene_list | count >=1 }}'
      then:
      - service: scene.turn_on
        metadata: {}
        target:
          entity_id: '{{target_scene_list}}'
      - set_conversation_response: Lumière réinitialisée
      else:
      - set_conversation_response: Aucune scene par defaut trouvée
    else:
    - set_conversation_response: Cette commande ne fonctionne pas depuis cet appareil
  mode: single
- id: '1714308060749'
  alias: Réveil intelligent - Démarrer la Musique
  description: ''
  trigger:
  - platform: time
    at: input_datetime.wake_up_time
  condition:
  - condition: state
    entity_id: input_boolean.automation_wake_up
    state: 'on'
  - condition: state
    entity_id: input_boolean.reveil_intelligent_musical
    state: 'on'
  - condition: state
    entity_id: binary_sensor.home_occupied
    state: 'on'
  - condition: state
    entity_id: binary_sensor.workday_today
    state: 'on'
  action:
  - service: script.lancer_playlist_de_reveil
    metadata: {}
    data: {}
  - wait_for_trigger:
    - platform: state
      entity_id:
      - light.chambre
      to: 'off'
    continue_on_timeout: false
  - service: media_player.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: media_player.bureau_droite
  mode: single
